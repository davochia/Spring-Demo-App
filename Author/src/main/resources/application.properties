server.port=9000
spring.application.name=author-server

# Database
spring.datasource.url=jdbc:h2:mem:authorDb
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.jpa.database=h2
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.defer-datasource-initialization=true


################## h2 ############################
spring.h2.console.path=/h2-console
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=true

#Link to h2 console = http://localhost:<Port>/h2-console

################# Hibernate #######################
hibernate.dialect= org.hibernate.dialect.H2Dialect
hibernate.show_sql= true
hibernate.hbm2ddl.auto= update


################# Swagger ########################
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method

#UI link to swagger API documentation: http://server:port/context-path/swagger-ui.html or http://server:port/context-path/v3/api-docs


################ Prometheus ############################
management.endpoints.web.exposure.include=*
management.metrics.tags.application=${spring.application.name}
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

############# Alternatives to Micrometer ##############
#https://skywalking.apache.org/
#https://opentelemetry.io/
#https://github.com/prometheus/jmx_exporter
#https://github.com/prometheus/client_java
#https://github.com/javamelody/javamelody/wiki/UserGuideAdvanced#exposing-metrics-to-prometheus

########## Knowledge links #######################
#https://blog.container-solutions.com/prometheus-operator-beginners-guide

### Deploy to kubernetes ####
# Install Helm and Helm charts
#  brew install helm (for Mac with Homebrew) or choco install kubernetes-helm or scoop install helm (Windows with Chocolatey or scoop)
#  helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
#  helm repo update
#  helm install [RELEASE_NAME] prometheus-community/kube-prometheus-stack

# Default grafana password: prom-operator username: admin
# 1. helm install prometheus prometheus-community/kube-prometheus-stack or helm install prometheus stable/prometheus --namespace monitoring
# 2. kubectl get pods -n monitoring
# 3. configure the datasource for the grafana with prometheus

# JVM Micrometer dashboards IDs (4701,  11955, 12900)
# docker port minikube, minikube service list