apiVersion: apps/v1
kind: Deployment
metadata:
  name: author-server
spec:
  selector:
    matchLabels:
      app: author-server
  replicas: 1
  template:
    metadata:
      labels:
        app: author-server
    spec:
      containers:
        -
        - name: author-server
          image: "wisekingdavid/author-server:latest"
          imagePullPolicy: Always
          ports:
            - name: http-author
              containerPort: 9000

          resources:
            requests:
              cpu: 100m
              memory: 500Mi
            limits:
              cpu: 500m
              memory: 1Gi

          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 9000
            initialDelaySeconds: 300
            timeoutSeconds: 20
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 9000

---
apiVersion: v1
kind: Service
metadata:
  name: author-server
spec:
  selector:
    app: author-server
  type: ClusterIP
  ports:
    - name: http-traffic
      port: 9000
      targetPort: http-author


---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: author-server
  labels:
    heritage: Helm
    release: prometheus
spec:
  selector:
    matchLabels:
      app: author-server
  jobLabel: author-server
  namespaceSelector:
    matchNames:
      - default
  endpoints:
    - path: /actuator/prometheus
      port: http-traffic
      scheme: http
      interval: 30s


---
#apiVersion: v1
#kind: ServiceAccount
#metadata:
#  name: prometheus
#
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRole
#metadata:
#  name: prometheus
#rules:
#  - apiGroups: [""]
#    resources:
#      - nodes
#      - nodes/metrics
#      - services
#      - endpoints
#      - pods
#    verbs: ["get", "list", "watch"]
#  - apiGroups: [""]
#    resources:
#      - configmaps
#    verbs: ["get"]
#  - apiGroups:
#      - networking.k8s.io
#    resources:
#      - ingresses
#    verbs: ["get", "list", "watch"]
#  - nonResourceURLs: ["/metrics"]
#    verbs: ["get"]
#
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRoleBinding
#metadata:
#  name: prometheus
#roleRef:
#  apiGroup: rbac.authorization.k8s.io
#  kind: ClusterRole
#  name: prometheus
#subjects:
#  - kind: ServiceAccount
#    name: prometheus
#    namespace: default
#
#---
#apiVersion: monitoring.coreos.com/v1
#kind: Prometheus
#metadata:
#  name: prometheus
#spec:
#  serviceAccountName: prometheus
#  serviceMonitorSelector:
#    matchLabels:
#      team: frontend
#  resources:
#    requests:
#      memory: 400Mi
#  enableAdminAPI: false
#
#---
#apiVersion: monitoring.coreos.com/v1
#kind: Prometheus
#metadata:
#  name: prometheus
#spec:
#  serviceAccountName: prometheus
#  podMonitorSelector:
#    matchLabels:
#      team: frontend
#  resources:
#    requests:
#      memory: 400Mi
#  enableAdminAPI: false
#
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: prometheus
#spec:
#  type: NodePort
#  ports:
#    - name: web
#      nodePort: 30900
#      port: 9090
#      protocol: TCP
#      targetPort: web
#  selector:
#    prometheus: prometheus

